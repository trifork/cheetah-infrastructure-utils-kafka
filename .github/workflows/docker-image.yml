name: Create and publish Cheetah Kafka Docker Image

on:
  workflow_dispatch:

  push:
    branches: ["main"]
    tags: ["*"]
  pull_request:
    branches: ["main", "release/**"]

env:
  IMAGE_NAME: ${{ github.repository }}
  DOCKERFILE_PATH: Dockerfile
  CONTEXT: .

permissions:
  contents: read
  packages: write

jobs:
  build-and-push-image:
    name: "Build and push"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ inputs.settings-path }} # location for the settings.xml file
          cache: "maven"

      - name: Package with Maven
        shell: bash
        run: mvn -B package --file pom.xml

      - name: Build and push
        uses: trifork/cheetah-infrastructure-utils-workflows/.github/actions/build-image/default@main
        with:
          read_package_pat: ${{ secrets.PACKAGE_PAT }} # we need this, as GITHUB_TOKEN only have permission to its own repo
          context: ${{ env.CONTEXT }}
          image_name: ${{ env.IMAGE_NAME }}
          github_run_id: ${{ github.run_id }}
          dockerfile_path: ${{ env.DOCKERFILE_PATH }}
          gitlab_token: ${{ github.ref_type == 'tag' && secrets.KAMSTRUP_GITLAB_PAT || '' }}
          push_image: ${{ (github.ref_type == 'tag' || github.event_name == 'workflow_dispatch') && 'true' || 'false' }}
          upload_image: ${{ (github.event_name == 'pull_request' || github.ref_name == 'main' || github.event_name == 'workflow_dispatch') && 'true' || 'false' }}

  trivy-container-scan-pr:
    name: trivy (PR report)
    needs: [build-and-push-image]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    permissions:
      contents: read
      packages: read
      pull-requests: write
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Docker image artifact
        uses: actions/download-artifact@f44cd7b40bfd40b6aa1cc1b9b5b7bf03d3c67110 # v4
        with:
          name: dockerimage
          path: ${{ github.workspace }}/tmp

      - name: Update pull request
        uses: trifork/cheetah-infrastructure-utils/.github/actions/trivy-report@main
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
          WORKSPACE_PATH: ${{ github.workspace }}
        with:
          image_name: ${{ env.IMAGE_NAME }}
          base-tag: "latest" # "pr-${{ github.event.pull_request.number }}"
          orga: "trifork"
          repo: ${{ github.repository }}
          pr-nb: ${{ github.event.pull_request.number }}
          topic: "image-scan ${{ env.IMAGE_NAME }}"

  trivy-container-scan:
    name: trivy (container scan)
    needs: [build-and-push-image]
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Docker image artifact
        uses: actions/download-artifact@f44cd7b40bfd40b6aa1cc1b9b5b7bf03d3c67110 # v4
        with:
          name: dockerimage
          path: ${{ github.workspace }}/tmp

      - name: Run Trivy vulnerability scanner for containers
        uses: aquasecurity/trivy-action@master
        with:
          input: /github/workspace/tmp/image.tar # -v "/home/runner/work/cheetah-backstage/cheetah-backstage":"/github/workspace"
          format: "sarif"
          #exit-code: "0"
          output: "trivy-container-results.sarif"
          github-pat: ${{ secrets.GITHUB_TOKEN }}

      #- name: Upload Trivy scan results to GitHub Security tab
      #  uses: github/codeql-action/upload-sarif@v2
      #  if: never()
      #  with:
      #    sarif_file: 'trivy-results.sarif'

      - name: Publish container report
        id: import-container-scan
        uses: trifork/cheetah-infrastructure-utils/.github/actions/defectdojo-import-scan@main
        if: github.ref_name == 'main' && github.event_name == 'push'
        with:
          token: ${{ secrets.DEFECTDOJO_TOKEN }}
          defectdojo_url: "https://defectdojo.cheetah.trifork.dev"
          defectdojo_endpoint: "/api/v2/reimport-scan/"
          file: "trivy-container-results.sarif"
          scan_type: SARIF # Trivy Scan
          engagement_name: import-container-scan
          product_name: ${{ env.IMAGE_NAME }}
          branch_tag: ${{ github.ref_name }}
          #commit_hash: ${{ github.sha }}
          #minimum_severity: Info, Low, Medium, High, Critical. Default value: Info

      - name: Show response
        if: github.ref_name == 'main' && github.event_name == 'push'
        run: |
          set -e
          printf '%s\n' '${{ steps.import-container-scan.outputs.response }}'
