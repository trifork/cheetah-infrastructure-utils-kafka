version: "2.1"

services:
  cheetah.oauth.simulator:
    hostname: cheetahoauthsimulator
    image: ghcr.io/trifork/cheetah-oauth-simulator:1.8.5
    platform: linux/amd64
    environment:
      #- ASPNETCORE_ENVIRONMENT=Development
      - OAuth__Mode=Asymmetric
      - Simulator__DefaultKafkaRole=*_all

  zookeeper:
    image: quay.io/strimzi/kafka:0.40.0-kafka-3.7.0
    platform: linux/amd64
    command:
      [
        "sh",
        "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
      ]
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      LOG_DIR: /tmp/logs
    mem_limit: 512m

  kafka:
    #image: cheetah-infrastructure-utils-kafka:integrationtest
    build:
      context: ../
      dockerfile: ./integrationtests/Dockerfile
    platform: linux/amd64
    hostname: kafka
    mem_limit: 1024m
    command:
      [
        "sh",
        "-c",
        "bin/kafka-server-start.sh /opt/kafka/custom-config/server.properties"
      ]
    depends_on:
      zookeeper:
        condition: service_started
      cheetah.oauth.simulator:
        condition: service_healthy
    ports:
      - "9092:9092" # Requires OAuth2 authentication
      - "9093:9093" # Requires No authentication
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ROOT_LOGGER_LEVEL: debug
    volumes:
      - ./config/kafka/server.properties:/opt/kafka/custom-config/server.properties
    healthcheck:
      test: nc -z kafka 19092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

  kafka-testclient:
    image: quay.io/strimzi/kafka:0.40.0-kafka-3.7.0
    platform: linux/amd64
    container_name: kafka-client
    volumes:
      - ./integrationtest.sh:/etc/config/integrationtest.sh
      - ./config/kafka/kafkasetup.config:/etc/config/kafkasetup.config
    command: "bash /etc/config/integrationtest.sh"
    restart: no
    depends_on:
      kafka:
        condition: service_healthy
      cheetah.oauth.simulator:
        condition: service_healthy
    environment:
      # The following settings are listed here only to satisfy the image's requirements.
      # We override the image's `command` anyways, hence this container will not start a broker.
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored

      TIMEOUT: "${JOB_TIMEOUT:-60s}" # How long the task has to complete
      OAUTH_CLIENT_SECRET: test
      OAUTH_CLIENT_ID: kafka
      OAUTH_TOKEN_ENDPOINT_URI: http://cheetahoauthsimulator:80/oauth2/token

      # How much data to generate
      COUNTER: 0
      COUNTER_STOP: 1

      TOPIC_NAME: "test-topic"
      KAFKA__URL: kafka:19092
